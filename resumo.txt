No primeiro modulo do capitulo 1, vemos o que está por trás do create react app. 
Vemos que o react em si ele tem uma estrutura bem clean. 
o que é dependencia de desenvolvimento ? 
Basicamente o comando -D, significa que não vamos precisar dessas bibliotecas quando subir o deploy. Porque vamos converter o codigo antes mesmo dele chegar a ficar online

o que é o babel ? 
serve para converter o codigo para uma maneira que o nosso ambiente de programação e todos os browser entenda. 
    babel core: biblioteca do babel
    babel cli: instalamos para poder usar o babel no terminal 
    babel preset-env: identifica em qual ambiente minha aplicação ta sendo execultada pra converter da melhor maneira possivel. 

depois de explicado e instalado vamo por a mão na massa: 
yarn babel src/index.js -o dist/bundle.js

pronto, primeiro codigo convertido
Porém nem tudo são flores, para execultar codigo react temos que dá um 
yarn add @babel/preset-react e colocar la no babel.config.js

o que é webpack? 
    basicamente vai ''ensinar'' para nossa aplicação como ele deve tratar cada arquivo importado.
    e também converte para o browser entender. 
    ex: sass > css
    webpack: biblioteca 
    webpack-cli: para poder usar no terminal
    htmlwebpackplugin: serve basicamente para referenciar sem ter que ficar colocando caso troque o nome 
    webpack-server: basicamente um livepreview
    }

Components react 

Basicamente quando temos algo que se repete na nossa aplicação usamos o component pra deixar ela de certa forma mais organizada. Na aula 9 fala sobre as propriedades do components a famosa props e como podemos fazer a comunicação entre eles.

Estados 

na aula 10 vimos um pouco sobre os estados do react, fizemos um contador usando o useState e foi explicado que o react não fica monitorando o codigo para saber se uma variavel mudou, por isso usamos o state. 

imutabilidade 

Basicamente dentro da imutabilidade nos temos que criar um novo espaço na memoria para adicionarmos algo novo como por exemplo da um push no array usariamos: [...array, novoValorArray]

fastRefresh 

Basicamente é um puglin pra a gente quando mudar alguma coisa no codigo não perdern nossos estados.

